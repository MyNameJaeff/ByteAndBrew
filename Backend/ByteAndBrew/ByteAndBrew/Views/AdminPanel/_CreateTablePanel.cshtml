@{
    /* _CreateTablePanel.cshtml */
}
@model ByteAndBrew.Dtos.Table.TableCreateDto

<form action="/AdminPanel/CreateTable" method="post" class="bg-yellow-50 p-6 rounded-xl shadow-md" data-type="Table">
    @Html.AntiForgeryToken()

    <h3 class="text-lg font-semibold text-gray-800 mb-4">
        <i class="fas fa-chair mr-2 text-yellow-600"></i>Add New Table
    </h3>

    <!-- Error Display -->
    <div id="table-errors" class="hidden mb-4 p-4 bg-red-50 border border-red-200 rounded-lg">
        <div class="flex items-start">
            <i class="fas fa-exclamation-circle text-red-500 mr-2 mt-1"></i>
            <div>
                <p class="font-medium text-red-800 mb-1">Please correct the following errors:</p>
                <ul class="text-red-600 text-sm list-disc list-inside space-y-1"></ul>
            </div>
        </div>
    </div>

    <!-- Success Display -->
    <div id="table-success" class="hidden mb-4 p-4 bg-green-50 border border-green-200 rounded-ltable-spinnerg">
        <div class="flex items-center">
            <i class="fas fa-check-circle text-green-500 mr-2"></i>
            <p class="text-green-800 font-medium"></p>
        </div>
    </div>

    <div class="mb-4">
        <label class="block text-gray-700 font-medium mb-2">Table Number *</label>
        <input name="TableNumber" type="number" min="1" max="200" required
               placeholder="e.g., 12"
               class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-500" />
    </div>

    <div class="mb-4">
        <label class="block text-gray-700 font-medium mb-2">Capacity *</label>
        <input name="Capacity" type="number" min="1" max="12" required
               placeholder="e.g., 4"
               class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-500" />
    </div>

    <div class="flex gap-2">
        <button type="submit"
                class="flex-1 bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-3 rounded-lg font-medium transition-colors duration-200 flex items-center justify-center">
            <i class="fas fa-save mr-2"></i>
            <span>Add Table</span>
            <i class="!hidden fas fa-spinner fa-spin ml-2 " id="table-spinner"></i>
        </button>
        <button type="button"
                onclick="closeQuickForm(this)"
                class="px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200">
            Cancel
        </button>
    </div>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form[action="/AdminPanel/CreateTable"]');
        if (!form) return;

        const errorBox = document.getElementById('table-errors');
        const errorList = errorBox.querySelector('ul');
        const successBox = document.getElementById('table-success');
        const successMsg = successBox.querySelector('p');

        const submitBtn = form.querySelector('button[type="submit"]');
        const spinner = document.getElementById('table-spinner');

        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            submitBtn.disabled = true;
            spinner.classList.remove('hidden');

            // Clear previous messages
            errorBox.classList.add('hidden');
            errorList.innerHTML = '';
            successBox.classList.add('hidden');

            const formData = new FormData(form);

            try {
                const res = await fetch(form.action, {
                    method: 'POST',
                    body: formData
                });

                if (res.ok) {
                    successMsg.textContent = 'Table added successfully!';
                    successBox.classList.remove('hidden');
                    form.reset();
                } else {
                    const data = await res.json();
                    if (data.errors) {
                        for (const err of Object.values(data.errors)) {
                            const li = document.createElement('li');
                            li.textContent = err;
                            errorList.appendChild(li);
                        }
                        errorBox.classList.remove('hidden');
                    } else {
                        alert('Failed to add table');
                    }
                }
            } catch (err) {
                alert('Error: ' + err.message);
            } finally {
                submitBtn.disabled = false;
                spinner.classList.add('hidden');
            }
        });
    });

    // Reuse closeQuickForm function from MenuItem/Booking forms
    function closeQuickForm(btn) {
        const container = btn.closest('.quick-form-container');
        if (!container) return;
        container.classList.add('hidden');
        container.innerHTML = '';
        const prevBtn = container.previousElementSibling;
        if (prevBtn) prevBtn.disabled = false;
    }
</script>
